
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Amanda Wang
 */
public class studentViewLecturerFeedback extends javax.swing.JFrame {
    private final String studentID;

    /**
     * Creates new form studentViewLecturerFeedback
     * @param studentID
     */
    public studentViewLecturerFeedback(String studentID) {
        initComponents();
        this.studentID = studentID;
        
        setTitle("View Lecturer Feedback");
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        DefaultTableModel lecFeedbackTableModel = (DefaultTableModel) ViewLecFeedbackTable.getModel();
        lecFeedbackTableModel.setRowCount(0); // this is to clear the existing row
        
        File directory = new File("."); // this is the current directory
        File[] files = directory.listFiles((dir, name) -> name.endsWith("availableSlots.txt"));
        
        if (files == null || files.length == 0){
            System.err.println("No feedback is provided for now.");
            return;
        }
        
        for (File file : files){
            //read the lecturerID from the file name
            String lecturerID = file.getName().replace("availableSlots.txt", "");
            
            try (BufferedReader reader = new BufferedReader(new FileReader(file))){
                String line;
                while ((line = reader.readLine()) != null){
                    String[] data = line.split(",");
                    if (data.length >= 6){
                        String appointmentID = data[0].trim();
                        String date = data[1].trim();
                        String startTime = data[2].trim();
                        String endTime = data[3].trim();
                        String student = data[4].trim();
                        String status = data[5].trim();
                        
                        if (student.equals(studentID) && status.equalsIgnoreCase("completed")){
                            lecFeedbackTableModel.addRow(new Object[]{appointmentID, date, startTime, endTime, lecturerID, status});
                        }
                    }
                }
            } catch (IOException e){
                System.err.println("Error reading the file: " + file.getName());
            }
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ViewLecFeedbackTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        viewFeedbackButton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(856, 484));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ViewLecFeedbackTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appointment ID", "Date", "Start Time", "End Time", "Lecturer ID", "Status"
            }
        ));
        jScrollPane1.setViewportView(ViewLecFeedbackTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 790, 370));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("View Lecturer Feedback");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 208, 57));

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 88, 35));

        viewFeedbackButton.setText("View Feedback");
        viewFeedbackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewFeedbackButtonActionPerformed(evt);
            }
        });
        getContentPane().add(viewFeedbackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 50, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/JavaStudentBackground.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void viewFeedbackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewFeedbackButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = ViewLecFeedbackTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a valid appointment.", "Selection Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        DefaultTableModel lecFeedbackTableModel = (DefaultTableModel) ViewLecFeedbackTable.getModel();
        
        String appointmentID = (String) lecFeedbackTableModel.getValueAt(selectedRow, 0);
        String date = (String) lecFeedbackTableModel.getValueAt(selectedRow, 1);
        String startTime = (String) lecFeedbackTableModel.getValueAt(selectedRow, 2);
        String endTime = (String) lecFeedbackTableModel.getValueAt(selectedRow, 3);
        String lecturerID = (String) lecFeedbackTableModel.getValueAt(selectedRow, 4);
        String status = (String) lecFeedbackTableModel.getValueAt(selectedRow, 5);
        
        String filePath = lecturerID + "availableSlots.txt";
        
        boolean feedbackFound = false;
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                
                if (parts.length == 7 && parts[0].equals(appointmentID)
                        && parts[4].equals(studentID)) {
                    String feedback = parts[6].trim();
                    
                    showDetailsDialog("AppointmentID: " + appointmentID + "\n"
                    + "Date: " + date + "\n"
                    + "Time: " + startTime + " - " + endTime + "\n"
                    + "LecturerID: " + lecturerID + "\n"
                    + "Status: " + status + "\n"
                    + "Feedback: " + feedback);
                    feedbackFound = true;
                    break;
                }
            }
            
            if (!feedbackFound) {
                JOptionPane.showMessageDialog(null, "No feedback found for the selected appointment.",
                                              "Feedback Not Found", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Does not have any feedback yet.",
                                          "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_viewFeedbackButtonActionPerformed
    
    private void showDetailsDialog(String details) {
        JOptionPane.showMessageDialog(null, details, 
                                      "Appointment Feedback", JOptionPane.INFORMATION_MESSAGE);
    }
    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ViewLecFeedbackTable;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel background;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewFeedbackButton;
    // End of variables declaration//GEN-END:variables
}
