
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author zhiyo
 */
public class Login extends javax.swing.JFrame {
    private int numAttempts = 0;

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        
        usersLoading(); //load the users from the users.txt file
        
        setTitle("APU Psychology Consultation Management System");
        setLocationRelativeTo(null);
        
        usernameField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    performLogin(); //let user login by pressing enter on keyboard
                }
            }
        });

        passwordField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    performLogin(); //let user login by pressing enter on keyboard
                }
            }
        });

        // Attach KeyListener to "Show Password" checkbox as well if needed
        showPassword.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    performLogin(); //let user login by pressing enter on keyboard
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        showPassword = new javax.swing.JCheckBox();
        cancelButton = new javax.swing.JButton();
        loginButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        registrationButton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        loginLabel.setForeground(new java.awt.Color(255, 255, 255));
        loginLabel.setText("LOGIN");
        getContentPane().add(loginLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 89, -1, -1));

        usernameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(255, 255, 255));
        usernameLabel.setText("Username");
        getContentPane().add(usernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, -1, -1));

        passwordLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordLabel.setText("Password");
        getContentPane().add(passwordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(246, 232, -1, -1));
        getContentPane().add(usernameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 164, 260, -1));
        getContentPane().add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 229, 260, -1));

        showPassword.setForeground(new java.awt.Color(255, 255, 255));
        showPassword.setText("Show Password");
        showPassword.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPasswordActionPerformed(evt);
            }
        });
        getContentPane().add(showPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(501, 257, -1, -1));

        cancelButton.setText("Cancel");
        cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(246, 320, 177, 42));

        loginButton.setText("Log In");
        loginButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        getContentPane().add(loginButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(435, 320, 172, 42));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Don't have an account?");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(246, 393, 140, -1));

        registrationButton.setText("Registration");
        registrationButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registrationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrationButtonActionPerformed(evt);
            }
        });
        getContentPane().add(registrationButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 390, -1, -1));

        background.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        background.setForeground(new java.awt.Color(255, 255, 255));
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/apu-1.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        performLogin();
    }//GEN-LAST:event_loginButtonActionPerformed
    
    private void performLogin() {
        List<String> userID = new ArrayList<>();
        List<String> username = new ArrayList<>();
        List<String> userPasswords = new ArrayList<>();
        List<String> userTypes = new ArrayList<>();

        // Read the users.txt file and populate lists
        try (BufferedReader reader = new BufferedReader(new FileReader("users.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length == 5) { // Ensure the line has all required fields
                    userID.add(parts[0].trim()); //userID
                    username.add(parts[1].trim());        // Username
                    userPasswords.add(parts[3].trim()); // Password
                    userTypes.add(parts[4].trim());     // User Type
                }
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error reading user data. Please try again.");
            return;
        }

        // Retrieve user input
        String userIDinput = usernameField.getText();
        String userPasswordinput = new String(passwordField.getPassword());

        // Validate credentials
        boolean userFound = false;
        for (int i = 0; i < username.size(); i++) {
            if (username.get(i).equals(userIDinput)) {
                userFound = true;

                // Check password
                if (userPasswords.get(i).equals(userPasswordinput)) {
                    JOptionPane.showMessageDialog(this, "Welcome, " + userIDinput, "Login Successful", JOptionPane.INFORMATION_MESSAGE);

                    // Open respective home page based on user type
                    String userType = userTypes.get(i);
                    if ("Lecturer".equals(userType)) {
                        lecturerHomePageGUI lecturerHomePage = new lecturerHomePageGUI(userID.get(i), username.get(i), userType);
                        lecturerHomePage.setVisible(true);
                    } else if ("Student".equals(userType)) {
                        studentHomePageGUI studentHomePage = new studentHomePageGUI(userID.get(i), username.get(i), userType);
                        studentHomePage.setVisible(true);
                    }

                    this.dispose(); // Close the login form
                    return;
                } else {
                    numAttempts++;
                    JOptionPane.showMessageDialog(this, "Invalid password. Program will be terminated after 3 failed login attempts. Attempt " + numAttempts + " of 3.");
                    break;
                }
            }
        }

        if (!userFound) {
            numAttempts++;
            JOptionPane.showMessageDialog(this, "Invalid userID or password. Program will be terminated after 3 failed login attempts. Attempt " + numAttempts + " of 3.");
        }

        // Terminate application after 3 failed attempts
        if (numAttempts >= 3) {
            JOptionPane.showMessageDialog(this, "3 login failures. Program will be terminated.");
            System.exit(0);
        }
    }
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(null, "Stop Login Operation?", "Login cancellation", JOptionPane.YES_NO_OPTION);
        if (a==JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void registrationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrationButtonActionPerformed
        // TODO add your handling code here:
        register();
    }//GEN-LAST:event_registrationButtonActionPerformed

    private void showPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPasswordActionPerformed
        // TODO add your handling code here:
        if (showPassword.isSelected()) {
            passwordField.setEchoChar((char)0);
        } else {
            passwordField.setEchoChar('*');
        }
        passwordField.repaint();
        
    }//GEN-LAST:event_showPasswordActionPerformed

    private void register() {
        Registration registrationPage = new Registration();
        registrationPage.setVisible(true);
    }
        
    private void usersLoading() {
        //set up empty userID list
        List<String> userID;
        userID = new ArrayList<>();
        
        //set up empty passwords list
        List<String> passwords;
        passwords = new ArrayList<>();
        
        //set up empty userTypes list
        List<String> userTypes;
        userTypes = new ArrayList<>();
        
        //set up txt file
        File usersFile = new File("users.txt");

    if (usersFile.exists()) {
        // Read data from file
        try (BufferedReader br = new BufferedReader(new FileReader(usersFile))) {
            String line;
            // Skip header
            br.readLine();
            while ((line = br.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length >= 3) {
                    userID.add(parts[0].trim());
                    passwords.add(parts[1].trim());
                    userTypes.add(parts[2].trim());
                }
            }
        } catch (IOException e) {
            System.err.println("Error reading from file: " + e.getMessage());
        }
    } else {
        // Write default data if file does not exist
        List<List<String>> usersList = Arrays.asList(
            Arrays.asList("userID", "Username", "Full Name", "Password", "User Type"),
            Arrays.asList("LEC0001", "Jim",  "Wang Jim Loong", "Jimmy01", "Lecturer"),
            Arrays.asList("STD0001", "Zy", "Wong Zhi Yoong", "ZhiYoong02", "Student")
        );
        try (FileWriter writer = new FileWriter(usersFile)) {
            for (List<String> sublist : usersList) {
                String line = String.join(",", sublist);
                writer.write(line + System.lineSeparator());
            }
        } catch (IOException e) {
            System.err.println("Error writing to file: " + e.getMessage());
        }
    }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            Login login = new Login();
            login.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JButton registrationButton;
    private javax.swing.JCheckBox showPassword;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
