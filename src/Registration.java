
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author zhiyo
 */
public class Registration extends javax.swing.JFrame {

    /**
     * Creates new form Registration
     */
    public Registration() {
        initComponents();
        
        setTitle("Registration");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        registrationLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        confirmPasswordLabel = new javax.swing.JLabel();
        userTypesLabel = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        confirmPasswordField = new javax.swing.JPasswordField();
        lecturerButton = new javax.swing.JRadioButton();
        studentButton = new javax.swing.JRadioButton();
        cancelButton = new javax.swing.JButton();
        registerButton = new javax.swing.JButton();
        showPasswordBox = new javax.swing.JCheckBox();
        showConfirmPasswordBox = new javax.swing.JCheckBox();
        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        registrationLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        registrationLabel.setForeground(new java.awt.Color(255, 255, 255));
        registrationLabel.setText("REGISTRATION");
        getContentPane().add(registrationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, -1, -1));

        usernameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        usernameLabel.setForeground(new java.awt.Color(255, 255, 255));
        usernameLabel.setText("Username");
        getContentPane().add(usernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, -1, -1));

        passwordLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordLabel.setText("Password");
        getContentPane().add(passwordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, -1, -1));

        confirmPasswordLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        confirmPasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
        confirmPasswordLabel.setText("Confirm Password");
        getContentPane().add(confirmPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, -1, -1));

        userTypesLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        userTypesLabel.setForeground(new java.awt.Color(255, 255, 255));
        userTypesLabel.setText("User Types");
        getContentPane().add(userTypesLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, -1, -1));
        getContentPane().add(usernameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 150, 264, -1));
        getContentPane().add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 264, -1));
        getContentPane().add(confirmPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 300, 268, -1));

        buttonGroup1.add(lecturerButton);
        lecturerButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lecturerButton.setForeground(new java.awt.Color(255, 255, 255));
        lecturerButton.setText("Lecturer");
        lecturerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(lecturerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, 96, -1));

        buttonGroup1.add(studentButton);
        studentButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        studentButton.setForeground(new java.awt.Color(255, 255, 255));
        studentButton.setText("Student");
        studentButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(studentButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, 100, -1));

        cancelButton.setText("Cancel");
        cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 400, 185, 49));

        registerButton.setText("Register");
        registerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });
        getContentPane().add(registerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 400, 185, 49));

        showPasswordBox.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        showPasswordBox.setForeground(new java.awt.Color(255, 255, 255));
        showPasswordBox.setText("Show Password");
        showPasswordBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showPasswordBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPasswordBoxActionPerformed(evt);
            }
        });
        getContentPane().add(showPasswordBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 250, -1, 20));

        showConfirmPasswordBox.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        showConfirmPasswordBox.setForeground(new java.awt.Color(255, 255, 255));
        showConfirmPasswordBox.setText("Show Password");
        showConfirmPasswordBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showConfirmPasswordBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showConfirmPasswordBoxActionPerformed(evt);
            }
        });
        getContentPane().add(showConfirmPasswordBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 300, 120, 20));

        nameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(255, 255, 255));
        nameLabel.setText("Full Name");
        getContentPane().add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, -1, -1));
        getContentPane().add(nameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 200, 264, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/apu-1.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        // TODO add your handling code here:
        String username = usernameField.getText();
        String fullName = nameField.getText();
        String userPassword = new String(passwordField.getPassword());
        String confirmPassword = new String(confirmPasswordField.getPassword());
        String userTypes = "";
        String userID = "";

        //check which button is selected
        if (lecturerButton.isSelected()) {
            userTypes = "Lecturer";
        } else if (studentButton.isSelected()) {
            userTypes = "Student";
        }

        if (!username.isEmpty() && !fullName.isEmpty() && !userPassword.isEmpty() && !confirmPassword.isEmpty() && !userTypes.isEmpty()) {
            if (userPassword.equals(confirmPassword)) {  // Check if password matches confirm password
                boolean usernameExists = false;
                
                //check username is exists
                try (BufferedReader usernameReader = new BufferedReader(new FileReader("users.txt"))) {
                    String line;
                    while ((line = usernameReader.readLine()) != null) {
                        String[] parts = line.split(",");
                        if (parts.length >= 2 && parts[1].trim().equals(username)) {
                            usernameExists = true;
                            break;
                        }
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Error checking username uniqueness. Please try again.");
                    return;
                }
                
                if (usernameExists) {
                    JOptionPane.showMessageDialog(this, "Username has already existed. Please type a different username...", "Invalid Username", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                // Generate auto-generated code
                try (BufferedReader reader = new BufferedReader(new FileReader("users.txt"))) {
                    String lastLecturerCode = "LEC0000";
                    String lastStudentCode = "STD0000";
                    String line;

                    while ((line = reader.readLine()) != null) {
                        String[] parts = line.split(",");
                        if (parts.length >= 1) {
                            String code = parts[0].trim();
                            if (code.startsWith("LEC") && code.compareTo(lastLecturerCode) > 0) {
                                lastLecturerCode = code;
                            } else if (code.startsWith("STD") && code.compareTo(lastStudentCode) > 0) {
                                lastStudentCode = code;
                            }
                        }
                    }

                    // Increment the last code for the appropriate user type
                    if ("Lecturer".equals(userTypes)) {
                        int nextNumber = Integer.parseInt(lastLecturerCode.substring(3)) + 1;
                        userID = String.format("LEC%04d", nextNumber);
                    } else if ("Student".equals(userTypes)) {
                        int nextNumber = Integer.parseInt(lastStudentCode.substring(3)) + 1;
                        userID = String.format("STD%04d", nextNumber);
                    }

                } catch (IOException ex) {
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Error generating user code. Please try again.");
                    return;
                }

                // Add the new user
                try (BufferedWriter writer = new BufferedWriter(new FileWriter("users.txt", true))) {
                    writer.write(userID + "," + username + "," + fullName + "," + userPassword + "," + userTypes);
                    writer.newLine();

                    JOptionPane.showMessageDialog(this, "Registration successful. Your ID is: " + userID, "Registration Success", JOptionPane.INFORMATION_MESSAGE);
                    dispose(); // Close the registration form
                } catch (IOException ex) {
                    Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Error saving user data. Please try again.");
                }
            } else {
                // Show error message if passwords don't match
                JOptionPane.showMessageDialog(this, "Password and Confirm Password do not match. Please try again.", "Invalid Password Confirmation", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please fill up all the information.", "Information needed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(null, "Cancelling the registration?", "Cancellation", JOptionPane.YES_NO_OPTION);
        if (a==JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void showPasswordBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPasswordBoxActionPerformed
        // TODO add your handling code here:
        if (showPasswordBox.isSelected()) {
            passwordField.setEchoChar((char)0);
        } else {
            passwordField.setEchoChar('*');
        }
        passwordField.repaint();
    }//GEN-LAST:event_showPasswordBoxActionPerformed

    private void showConfirmPasswordBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showConfirmPasswordBoxActionPerformed
        // TODO add your handling code here:
        if (showConfirmPasswordBox.isSelected()) {
            confirmPasswordField.setEchoChar((char)0);
        } else {
            confirmPasswordField.setEchoChar('*');
        }
        confirmPasswordField.repaint();
    }//GEN-LAST:event_showConfirmPasswordBoxActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JLabel confirmPasswordLabel;
    private javax.swing.JRadioButton lecturerButton;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel registrationLabel;
    private javax.swing.JCheckBox showConfirmPasswordBox;
    private javax.swing.JCheckBox showPasswordBox;
    private javax.swing.JRadioButton studentButton;
    private javax.swing.JLabel userTypesLabel;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
